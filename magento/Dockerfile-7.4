ARG BACK_END
FROM ghcr.io/deck-app/${BACK_END}:v7.4
LABEL maintainer Naba Das <hello@get-deck.com>

RUN mkdir -p /app
RUN mkdir -p /var/preview
COPY default.conf /app/default.conf
COPY httpd.conf /app/httpd.conf
COPY app.env /app/app.env
RUN wget -O /var/preview/index.html https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
RUN mkdir -p /app/magento
ARG SERVER_ROOT

ENV INSTALL_DIR /app/magento
ENV MAGENTO_VERSION 2.4.4
ARG BACK_END
RUN if [ ${BACK_END} = nginx ]; then \
    cp /app/default.conf /etc/nginx/conf.d/default.conf && \
    sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/nginx/conf.d/default.conf && \
    sed -i "s#{SERVER_ROOT}#/var/www/#g" /app/default.conf \
;else \
    cp /app/httpd.conf /etc/apache2/httpd.conf && \
    sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/apache2/httpd.conf && \
    sed -i "s#{SERVER_ROOT}#/var/www/#g" /app/httpd.conf \
;fi
COPY auth.json /root/.composer/auth.json
# Persistent runtime dependencies
# Example RUN apk add --no-cache php7-openssl php7-sysvmsg php7-curl

WORKDIR /var/www

COPY php.ini /etc/php7/php.ini
ARG DISPLAY_PHPERROR
RUN if [ ${DISPLAY_PHPERROR} = true ]; then \
sed -i "s#{DISPLAY}#On#g" /etc/php7/php.ini \
;else \
sed -i "s#{DISPLAY}#Off#g" /etc/php7/php.ini \
;fi

#Xdebug enable or disable
ARG XDEBUG
RUN if [ ${XDEBUG} = true ]; then \
apk add php7-pecl-xdebug \
&& echo "zend_extension=xdebug" >> /etc/php7/php.ini \
;fi

ARG INSTALL_ADDITIONAL_EXTENSIONS
RUN if [ -z "$INSTALL_ADDITIONAL_EXTENSIONS" ] ; then \
echo "No additional PHP extensions added" \
;else \
apk add --no-cache ${INSTALL_ADDITIONAL_EXTENSIONS} \
;fi

RUN apk add php7-zip php7-pdo_mysql php7-soap php7-xsl php7-sodium tar
RUN apk add zip
ARG ADMIN_PASSWD
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN sed -i "s#{ADMIN_PASSWD}#${ADMIN_PASSWD}#g" /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

## Linux permission issue
ARG USER_ID
ARG GROUP_ID
RUN apk --no-cache add shadow
RUN if [[ ${BACK_END} = nginx ]] ; then usermod -u ${USER_ID} nobody && groupmod -g ${GROUP_ID} nobody ; else usermod -u ${USER_ID} apache && groupmod -g ${GROUP_ID} apache ; fi
RUN cd /app && \ 
  curl https://codeload.github.com/magento/magento2/tar.gz/2.4.3 -o 2.4.3.tar.gz && \
  tar xvf 2.4.3.tar.gz
COPY index.php /app/magento2-2.4.3/index.php
COPY php.env /app/magento2-2.4.3/app/etc/php.env
COPY install.sh /install.sh
RUN chmod +x /install.sh

## Database credentials
ARG DB_NAME
ARG DB_USER
ARG DB_PASSWORD
ARG ADMIN_PASSWD
RUN sed -i "s#{DB_NAME}#${DB_NAME}#g" /docker-entrypoint.sh
RUN sed -i "s#{DB_USER}#${DB_USER}#g" /docker-entrypoint.sh
RUN sed -i "s#{DB_PASSWORD}#${DB_PASSWORD}#g" /docker-entrypoint.sh
RUN sed -i "s#{ADMIN_PASSWD}#${ADMIN_PASSWD}#g" /docker-entrypoint.sh
RUN sed -i "s#{MAGENTO_VERSION}#${MAGENTO_VERSION}#g" /docker-entrypoint.sh
RUN sed -i "s#{DB_NAME}#${DB_NAME}#g" /install.sh
RUN sed -i "s#{DB_USER}#${DB_USER}#g" /install.sh
RUN sed -i "s#{DB_PASSWORD}#${DB_PASSWORD}#g" /install.sh
RUN sed -i "s#{ADMIN_PASSWD}#${ADMIN_PASSWD}#g" /install.sh
RUN sed -i "s#{MAGENTO_VERSION}#${MAGENTO_VERSION}#g" /install.sh
RUN sed -i "s#{USER_ID}#${USER_ID}#g" /docker-entrypoint.sh
RUN sed -i "s#{GROUP_ID}#${GROUP_ID}#g" /docker-entrypoint.sh

CMD /docker-entrypoint.sh & /sbin/runit-wrapper