name: Magento 

on:
  schedule:
  - cron:  '30 02 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Magento-mariadb-AMD64:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Magento, phpmyadmin, mariadb and elasticsearch
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        XDEBUG: true
        DISPLAY_PHPERROR: true
        APP_CODE_PATH_HOST: /tmp/magento
        DATA_PATH_HOST: /tmp/db
        hostname: magento
    - name: Container check
      run:  docker ps
    - name: Pre-defined file download
      run: docker exec magento_magento_1 wget -O /install.sh https://raw.githubusercontent.com/nabad600/image-test-file/main/install.sh
    - name: Host Name check
      run: docker exec magento_magento_1 hostname
    
    - name: PHP version check
      run: docker exec magento_magento_1 php -v
    - name: Mysql Driver check
      run: docker exec magento_magento_1 php -m | grep mysql
    - name: Git Version check
      run: docker exec magento_magento_1 git --version
    - name: Curl Version check
      run: docker exec magento_magento_1 curl --version
    - name: Nodejs Version check
      run: docker exec magento_magento_1 node --version
    - name: NPM Version check
      run: docker exec magento_magento_1 npm --version
    - name: Composer test
      run: docker exec magento_magento_1 composer
    - name: Container log check
      run: docker logs magento_magento_1
    - name: Pre-defined2 file download
      run: |
          sleep 90s
          docker exec magento_magento_1 wget -O /var/www/app/etc/env.php https://raw.githubusercontent.com/nabad600/image-test-file/main/env.php
          docker exec magento_magento_1 wget -O /var/www/app/env.php https://raw.githubusercontent.com/nabad600/image-test-file/main/app.env
    - name: Check Magento install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 50s
        done
    - name: Magento tset
      run: curl -i http://localhost:53487/
    - name: Destroy container and file
      run:  |
        docker-compose down
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/magento
        sudo rm -rf /tmp/db
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with: 
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        channel: '#github_action_status'
      if: always()
  Magento-mariadb-ARM64:
    runs-on: self-hosted
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Magento, phpmyadmin, mariadb and elasticsearch
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        XDEBUG: true
        DISPLAY_PHPERROR: true
        APP_CODE_PATH_HOST: /tmp/magento
        DATA_PATH_HOST: /tmp/db
        hostname: magento
    - name: Container check
      run:  docker ps
    - name: Pre-defined file download
      run: docker exec magento_magento_1 wget -O /install.sh https://raw.githubusercontent.com/nabad600/image-test-file/main/install.sh
    - name: Host Name check
      run: docker exec magento_magento_1 hostname
    - name: PHP version check
      run: docker exec magento_magento_1 php -v
    - name: Mysql Driver check
      run: docker exec magento_magento_1 php -m | grep mysql
    - name: Git Version check
      run: docker exec magento_magento_1 git --version
    - name: Curl Version check
      run: docker exec magento_magento_1 curl --version
    - name: Nodejs Version check
      run: docker exec magento_magento_1 node --version
    - name: NPM Version check
      run: docker exec magento_magento_1 npm --version
    - name: Composer test
      run: docker exec magento_magento_1 composer
    - name: Container log check
      run: docker logs magento_magento_1
    - name: Pre-defined2 file download
      run: |
          sleep 60s
          docker exec magento_magento_1 wget -O /var/www/app/etc/env.php https://raw.githubusercontent.com/nabad600/image-test-file/main/env.php
          docker exec magento_magento_1 wget -O /var/www/app/env.php https://raw.githubusercontent.com/nabad600/image-test-file/main/app.env
    - name: Check Magento install or not
      run: |
        sleep 90s
        docker logs magento_magento_1
  #   - name: Check Magento install or not
  #     run:  |
  #       while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
  #       do 
  #         sleep 50s
  #         docker logs magento_magento_1
  #       done
  #   - name: Magento tset
  #     run: curl -i http://localhost:53487/
    - name: Destroy container and file
      run:  |
        docker-compose down
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/magento
        sudo rm -rf /tmp/db
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with: 
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        channel: '#github_action_status'
      if: always()
    